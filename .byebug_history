c
current_user.is_super_admin?
current_user.is_super
current_user
n
name_to
email_to
from_user
n
current_user
c
n
setting_obj = EmailSetting.find_by(email: email)
c
n
setting_obj
n
c
n
c
                )}
                    }
                        unsubscribe_token: EmailSetting.getToken(email_to, :invitations)
                        name_to: name_to,
                        from_user: from_user,
                    {
                    "gun_mailer/users/invite",
                    I18n.t("emails.invite.intro", name: from_user.name),
                    email_to,
                send_async_message(
            I18n.with_locale(user_locale(from_user)) {
                    }
                        unsubscribe_token: EmailSetting.getToken(email_to, :invitations)
                        name_to: name_to,
                        from_user: from_user,
                    {
                    "gun_mailer/users/invite",
                    I18n.t("emails.invite.intro", name: from_user.name),
                    email_to,
                send_async_message(
)I18n.with_locale(user_locale(from_user)) do
}
unsubscribe_token: EmailSetting.getToken(email_to, :invitations)
name_to: name_to,
from_user: from_user,
{
"gun_mailer/users/invite",
I18n.t("emails.invite.intro", name: from_user.name),
email_to,
send_async_message(
I18n.with_locale(user_locale(from_user)) do
EmailSetting.allowed?(email_to, :invitations)
GunMailer.send_invitation(user_from, email_to, name_to)
c
EmailSetting.allowed?(email_to, :invitations)
Contact.create(user:current_user, source: :manual, email: email)
n
GunMailer.send_invitation(user_from, email_to, name_to)
GunMailer
invite
c
json
n
c
n
nn
n
nn
n
nn
n
nn
n
flash_hash
n
env
n
en
email
current_user
n
name_to
email_to
user_from
user_From
c
n
c
n
email_array
n
receiver["source"]
source?
source
email
name
c
n
c
n
Setting.create(key: "ADMIN_EMAIL", value: "ayodeleamadi@gmail.com")
c
err
n
email
n
c
err
n
user_info
n
c
n
c
err
n
state_params
n
json_response
n
c
user
User.all
c
err
n
User.all
c
User.new
User.methods
User.column_names
c
err
n
err
n
User.all
user
err
n
nn
n
c
Setting.create(key: "ADMIN_EMAIL", value: "ayodeleamadi@gmail.com")
c
n
Setting.create(key: "ADMIN_EMAIL", value: "ayodeleamadi@gmail.com")
n
json_response
n
c
redirect_uri
err
n
c
redirect_uri
err
n
c
redirect_uri
err
n
c
redirect_uri
err
n
c
redirect_uri
err
n
c
redirect_uri
err
n
c
redirect_uri
err
n
c
redirect_uri
err
n
redirect_uri
err
n
c
redirect_uri
redirect_ur
n
err
n
c
err
n
c
n
redirect_uri
err
n
c
client_id
code
redirect_uri
err
n
c
err
n
response
n
Rails.application.secrets.facebook_client_secret
Rails.application.secrets.facebook_client_id
n
c
client_secret
err
n
c
Setting.create(key: "PRIVATE", value: "1")
c
Setting.all
Setting.create(key: "ADMIN_EMAIL", value: "ayodeleamadi@gmail.com")
Setting.all
c
Setting.create(key: "ADMIN_EMAIL", value: "ayodeleamadi@gmail.com")
Setting.create(key: "ADMIN_EMAIL", value: "ayodeleamadi@gmail.com)
Setting.all
c
User.column_names
User.columns
User.methods
err
n
err
User.all
n
c
n
(user_info[:name].present? ? user_info[:name] : user_info[:email][/[^@]+/])
user.email
email
n
c
n
c
user.name
user.naem
user_info[:name]
User.create(email: "something@name.com, name: "James Potter")
User.create(email
u
u = user_info[:name].present? ? user_info[:name] : user_info[:email][/[^@]+/]
user_info
err
n
err
